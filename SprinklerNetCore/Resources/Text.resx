<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiKey" xml:space="preserve">
    <value>DarkSky API key</value>
  </data>
  <data name="AutomationTitle" xml:space="preserve">
    <value>Automation</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CloseAfter" xml:space="preserve">
    <value>Closer sprinkler after</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create new</value>
  </data>
  <data name="DateTimeStart" xml:space="preserve">
    <value>Start date and time</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteConfirmation" xml:space="preserve">
    <value>Are you sure you want to delete this?</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Forecast" xml:space="preserve">
    <value>Weather forecast</value>
  </data>
  <data name="ForecastApparentTemp" xml:space="preserve">
    <value>Apparent Temp °C</value>
  </data>
  <data name="ForecastHighTemp" xml:space="preserve">
    <value>High Temp °C</value>
  </data>
  <data name="ForecastIcon" xml:space="preserve">
    <value>Icon</value>
  </data>
  <data name="ForecastIOSettings" xml:space="preserve">
    <value>Settings for the forecast and automation</value>
  </data>
  <data name="ForecastLowTemp" xml:space="preserve">
    <value>Low Temp °C</value>
  </data>
  <data name="ForecastNeedSprinkler" xml:space="preserve">
    <value>Do we need to sprinkle?</value>
  </data>
  <data name="ForecastNoneAvailable" xml:space="preserve">
    <value>No forecast available</value>
  </data>
  <data name="ForecastPercentageCorrection" xml:space="preserve">
    <value>Correction percentage</value>
  </data>
  <data name="ForecastPrecIntens" xml:space="preserve">
    <value>Prec Intens</value>
  </data>
  <data name="ForecastPrecProb" xml:space="preserve">
    <value>Prec Prob %</value>
  </data>
  <data name="ForecastPrecType" xml:space="preserve">
    <value>Prec Type</value>
  </data>
  <data name="ForecastSummary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="ForecastTemp" xml:space="preserve">
    <value>Temp °C</value>
  </data>
  <data name="ForecastTime" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="ForecastTitle" xml:space="preserve">
    <value>Forecast information</value>
  </data>
  <data name="ForecastWindSpeed" xml:space="preserve">
    <value>Wind Speed km/h</value>
  </data>
  <data name="FullAutomationMode" xml:space="preserve">
    <value>Full automation with forecast, actuals and automatic programming</value>
  </data>
  <data name="FuzzySprinklers" xml:space="preserve">
    <value>Temperature and rain ranges for automation</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="IndexBackToList" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="IsHumid" xml:space="preserve">
    <value>Is it humid?</value>
  </data>
  <data name="IsInverted" xml:space="preserve">
    <value>Is input inverted?</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language for forecasts</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="MaxSprinklers" xml:space="preserve">
    <value>Maximum number of sprinklers</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NeedTo" xml:space="preserve">
    <value>Is sprinkling needed?</value>
  </data>
  <data name="NeedToSprinkle" xml:space="preserve">
    <value>Is sprinkling needed?</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Sprinkler number</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Sprinkler open</value>
  </data>
  <data name="PercentageCorrection" xml:space="preserve">
    <value>Percentage of correction to be apply for automation</value>
  </data>
  <data name="PrecipitationPercentForecast" xml:space="preserve">
    <value>Threshold for forecast data to be belived to be true</value>
  </data>
  <data name="PrecipitationThresholdActuals" xml:space="preserve">
    <value>Threshold for actual precipitation when sprinkling is not needed</value>
  </data>
  <data name="PrecipitationThresholdForecast" xml:space="preserve">
    <value>Threshold for forecast precipitation when sprinkling is not needed</value>
  </data>
  <data name="RainMax" xml:space="preserve">
    <value>Threshold for rain quantity</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SoilHumidity" xml:space="preserve">
    <value>Soil humidity</value>
  </data>
  <data name="SprinklerNumber" xml:space="preserve">
    <value>Sprinkler number</value>
  </data>
  <data name="SprinklerPrograms" xml:space="preserve">
    <value>Programs</value>
  </data>
  <data name="Sprinklers" xml:space="preserve">
    <value>Sprinklers</value>
  </data>
  <data name="SprinklingMax" xml:space="preserve">
    <value>Correction in percent 100% = 100</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start times</value>
  </data>
  <data name="TempMax" xml:space="preserve">
    <value>Maximum temperature</value>
  </data>
  <data name="TempMin" xml:space="preserve">
    <value>Minimum temperature</value>
  </data>
  <data name="TimeToCheck" xml:space="preserve">
    <value>Time when automation process will check if sprinkling needed</value>
  </data>
  <data name="TimeZoneInfo" xml:space="preserve">
    <value>Timezone correction for sprinkler</value>
  </data>
  <data name="TypicalProgram" xml:space="preserve">
    <value>Typical program</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit for forecasts</value>
  </data>
  <data name="CreateTypical" xml:space="preserve">
    <value>Create typical program</value>
  </data>
  <data name="EditTypical" xml:space="preserve">
    <value>Edit typical</value>
  </data>
  <data name="HistoryNoData" xml:space="preserve">
    <value>No history data</value>
  </data>
  <data name="HistoryTitle" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="IndexBackToHome" xml:space="preserve">
    <value>Back to home</value>
  </data>
  <data name="ListAllPrograms" xml:space="preserve">
    <value>List all programs</value>
  </data>
  <data name="ProgramTitle" xml:space="preserve">
    <value>Programs</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SprinklerTitle" xml:space="preserve">
    <value>Sprinkler</value>
  </data>
  <data name="UserTitle" xml:space="preserve">
    <value>User management</value>
  </data>
  <data name="ErrorMustBeNumber" xml:space="preserve">
    <value>Field must be a number</value>
  </data>
  <data name="HomeDateTime" xml:space="preserve">
    <value>It is now {0}, if not, then change the time zone in the &lt;a href="/Settings"&gt;settings&lt;/a&gt;.</value>
  </data>
  <data name="HomeInformation" xml:space="preserve">
    <value>&lt;p&gt;
        This sprinkler is running on &lt;a href="https://docs.microsoft.com/aspnet/core/"&gt;ASP.NET Core&lt;/a&gt;, using native &lt;a href="https://github.com/dotnet/iot"&gt;System.Device.Gpio&lt;/a&gt; and in an &lt;a href="https://azure.microsoft.com/services/iot-edge/
"&gt;Azure IoT Edge&lt;/a&gt; environement
    &lt;/p&gt;
    &lt;p&gt;Learn more about the solution on &lt;a href="https://github.com/ellerbach"&gt;Laurent Ellerbach's GitHub&lt;/a&gt;&lt;/p&gt;
    &lt;br /&gt;

    &lt;h2&gt;You need to be an approved user and be connected to control the sprinklers.&lt;/h2&gt;</value>
  </data>
  <data name="HomePrivacy" xml:space="preserve">
    <value>This site uses cookies but don't store anything private in them. It's just to make navigation easier.</value>
  </data>
  <data name="HomeTitle" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="HomeWelcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="IsClosed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="IsOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="Sprinkler" xml:space="preserve">
    <value>Sprinkler</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
</root>